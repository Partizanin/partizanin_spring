package hw11.controller;

import hw11.model.domain.Administrator;
import hw11.model.domain.Client;
import hw11.model.domain.Operator;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Created with Intellij IDEA.
 * Project name: proff16
 * User: Partizanin
 * Date: 22.07.2014
 * Time: 10:56
 * To change this template use File|Setting|File Templates.
 */
@WebServlet("/Registration")
public class RegistrationServlet extends HttpServlet {

    List<Client> clients ;
    List<Operator> operators ;
    List<Administrator> administrators ;
/*Client: String name, String serName, String phoneNumber, String address, double summa, String lastDate
    Operator: String login, String password, String identifyNumber
    Admin: String login, String password, String loginAnotherAdmin*/
    @Override
    public void init()
            throws ServletException {
        clients = new ArrayList<Client>();
        operators = new ArrayList<Operator>();
        administrators = new ArrayList<Administrator>();
        clients.add(new Client("Vasa","Pupkin","123","kiev",12.30,"12.05.2014"));
        clients.add(new Client("Partizanin","123","123","kiev",12.30,"12.05.2014"));
        operators.add(new Operator("Vasa","Pupkin",123));
        administrators.add(new Administrator("Partizanin","123","***"));
    }

    @Override
    protected void doGet(HttpServletRequest request,
                         HttpServletResponse response)
            throws ServletException, IOException {



    }

    @Override
    protected void doPost(HttpServletRequest request,
                          HttpServletResponse response)
            throws ServletException, IOException {

        if (request.getParameter("backClient")!= null){

            request.getRequestDispatcher("/hw11/jsp/LoginClient.jsp").forward(request,response);

        }else if (request.getParameter("backAdmin")!= null){

            request.getRequestDispatcher("/hw11/jsp/LoginAdministrator.jsp").forward(request,response);

        }else if (request.getParameter("backOperator")!= null){

            request.getRequestDispatcher("/hw11/jsp/LoginOperator.jsp").forward(request,response);

        }




        if (request.getParameter("regClient")!= null){

            Client client = new Client();

            String name = request.getParameter("name");
            String surname = request.getParameter("surname");
            String phoneNumber = request.getParameter("phomeNumber");
            if (searchClient(name,surname,phoneNumber)){

                request.setAttribute("message","This client already exist");

                request.getRequestDispatcher("/hw11/jsp/RegistrationClient.jsp").forward(request,response);

            }else {
                client.setName(name);
                client.setSurname(surname);
                client.setAddress(request.getParameter("address"));
                client.setPhoneNumber(phoneNumber);
                client.setSumma(Double.parseDouble(request.getParameter("price")));
                client.setLastDate(request.getParameter("dateOfLastOrder"));
                clients.add(client);
            }

        }else if (request.getParameter("regAdmin")!= null){

        }else if (request.getParameter("regOperator")!= null){

        }

    }


    public boolean searchClient(String name,String surname,String phoneNumber){

        for (Client client : clients) {

            if (client.getName().equals(name) && client.getSurname().equals(surname) && client.getPhoneNumber().equals(phoneNumber)) {

                return true;
            }

        }


        return false;
    }

    public boolean searchOperator(String login,String password){

        for (Operator operator : operators) {

            if (operator.getLogin().equals(login) && operator.getPassword().equals(password)) {

                return true;
            }
        }

        return false;
    }

    public boolean searchAdmin(String login,String password){

        for (Administrator admin : administrators) {

            if (admin.getLogin().equals(login) && admin.getPassword().equals(password)) {

                return true;
            }
        }

        return false;
    }

}
